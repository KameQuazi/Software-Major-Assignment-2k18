'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace ServiceReference1
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="ServiceReference1.ILampService")>  _
    Public Interface ILampService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/Authenticate", ReplyAction:="http://tempuri.org/ILampService/AuthenticateResponse")>  _
        Function Authenticate(ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampUserWrapper
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/Authenticate", ReplyAction:="http://tempuri.org/ILampService/AuthenticateResponse")>  _
        Function AuthenticateAsync(ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampUserWrapper)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/AddTemplate", ReplyAction:="http://tempuri.org/ILampService/AddTemplateResponse")>  _
        Function AddTemplate(ByVal template As LampCommon.LampTemplate, ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampStatus
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/AddTemplate", ReplyAction:="http://tempuri.org/ILampService/AddTemplateResponse")>  _
        Function AddTemplateAsync(ByVal template As LampCommon.LampTemplate, ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampStatus)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/QueueJob", ReplyAction:="http://tempuri.org/ILampService/QueueJobResponse")>  _
        Function QueueJob(ByVal job As LampCommon.LampJob, ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampStatus
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/QueueJob", ReplyAction:="http://tempuri.org/ILampService/QueueJobResponse")>  _
        Function QueueJobAsync(ByVal job As LampCommon.LampJob, ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampStatus)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/GetTemplate", ReplyAction:="http://tempuri.org/ILampService/GetTemplateResponse")>  _
        Function GetTemplate(ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampTemplateWrapper
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/GetTemplate", ReplyAction:="http://tempuri.org/ILampService/GetTemplateResponse")>  _
        Function GetTemplateAsync(ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampTemplateWrapper)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/GetAllTemplate", ReplyAction:="http://tempuri.org/ILampService/GetAllTemplateResponse")>  _
        Function GetAllTemplate(ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampTemplate()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ILampService/GetAllTemplate", ReplyAction:="http://tempuri.org/ILampService/GetAllTemplateResponse")>  _
        Function GetAllTemplateAsync(ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampTemplate())
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ILampServiceChannel
        Inherits ServiceReference1.ILampService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class LampServiceClient
        Inherits System.ServiceModel.ClientBase(Of ServiceReference1.ILampService)
        Implements ServiceReference1.ILampService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function Authenticate(ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampUserWrapper Implements ServiceReference1.ILampService.Authenticate
            Return MyBase.Channel.Authenticate(credentials)
        End Function
        
        Public Function AuthenticateAsync(ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampUserWrapper) Implements ServiceReference1.ILampService.AuthenticateAsync
            Return MyBase.Channel.AuthenticateAsync(credentials)
        End Function
        
        Public Function AddTemplate(ByVal template As LampCommon.LampTemplate, ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampStatus Implements ServiceReference1.ILampService.AddTemplate
            Return MyBase.Channel.AddTemplate(template, credentials)
        End Function
        
        Public Function AddTemplateAsync(ByVal template As LampCommon.LampTemplate, ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampStatus) Implements ServiceReference1.ILampService.AddTemplateAsync
            Return MyBase.Channel.AddTemplateAsync(template, credentials)
        End Function
        
        Public Function QueueJob(ByVal job As LampCommon.LampJob, ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampStatus Implements ServiceReference1.ILampService.QueueJob
            Return MyBase.Channel.QueueJob(job, credentials)
        End Function
        
        Public Function QueueJobAsync(ByVal job As LampCommon.LampJob, ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampStatus) Implements ServiceReference1.ILampService.QueueJobAsync
            Return MyBase.Channel.QueueJobAsync(job, credentials)
        End Function
        
        Public Function GetTemplate(ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampTemplateWrapper Implements ServiceReference1.ILampService.GetTemplate
            Return MyBase.Channel.GetTemplate(credentials)
        End Function
        
        Public Function GetTemplateAsync(ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampTemplateWrapper) Implements ServiceReference1.ILampService.GetTemplateAsync
            Return MyBase.Channel.GetTemplateAsync(credentials)
        End Function
        
        Public Function GetAllTemplate(ByVal credentials As LampCommon.LampCredentials) As LampCommon.LampTemplate() Implements ServiceReference1.ILampService.GetAllTemplate
            Return MyBase.Channel.GetAllTemplate(credentials)
        End Function
        
        Public Function GetAllTemplateAsync(ByVal credentials As LampCommon.LampCredentials) As System.Threading.Tasks.Task(Of LampCommon.LampTemplate()) Implements ServiceReference1.ILampService.GetAllTemplateAsync
            Return MyBase.Channel.GetAllTemplateAsync(credentials)
        End Function
    End Class
End Namespace
